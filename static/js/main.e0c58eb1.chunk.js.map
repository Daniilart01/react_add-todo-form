{"version":3,"sources":["api/users.ts","api/todos.ts","services/findUserById.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","services/getNextTodoId.ts","index.tsx"],"names":["id","name","username","email","title","completed","userId","findUserById","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","classNames","TodoList","todos","map","App","useState","titleError","setEmptyTitleFieldError","userError","setEmptyUserFieldError","todosFromServer","todosList","setTodosList","undefined","formData","setFormData","action","method","onSubmit","event","preventDefault","trim","prevTodos","Math","max","target","reset","htmlFor","placeholder","onInput","currentTarget","value","type","onKeyDown","test","key","defaultValue","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0c58eb1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/user';\n\nexport const findUserById = (id: number): User | null => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { findUserById } from '../../services/findUserById';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = findUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/user';\nimport { findUserById } from './services/findUserById';\nimport { getNextTodoId } from './services/getNextTodoId';\nimport { Todo } from './types/todo';\n\ninterface FormFileds {\n  title: string;\n  user: User | undefined;\n}\n\nexport const App = () => {\n  const [titleError, setEmptyTitleFieldError] = useState(false);\n  const [userError, setEmptyUserFieldError] = useState(false);\n\n  const [todosList, setTodosList] = useState<Todo[]>(todosFromServer);\n\n  const [formData, setFormData]\n    = useState<FormFileds>({ title: '', user: undefined });\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setEmptyTitleFieldError(!formData.title.trim());\n    setEmptyUserFieldError(!formData.user);\n\n    if (!formData.title.trim() || !formData.user) {\n      return;\n    }\n\n    setTodosList(prevTodos => [...prevTodos, {\n      id: getNextTodoId(todosList),\n      title: formData.title.trim(),\n      completed: false,\n      userId: formData.user ? formData.user.id : 0,\n    }]);\n\n    const form = event.target as HTMLFormElement;\n\n    form.reset();\n\n    setFormData(({ title: '', user: undefined }));\n  };\n\n  const keyCheck = (event: React.KeyboardEvent) => {\n    if (!/^[A-Za-zА-Яа-яЁёіїєґҐґ ]*$/\n      .test(event.key)) {\n      event.preventDefault();\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const user = findUserById(+event.currentTarget.value);\n\n    setFormData({\n      title: formData.title,\n      user: user || undefined,\n    });\n\n    setEmptyUserFieldError(false);\n  };\n\n  const handleTitleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      title: event.currentTarget.value,\n    });\n\n    setEmptyTitleFieldError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            onInput={handleTitleChange}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onKeyDown={keyCheck}\n          />\n          {titleError\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            defaultValue={0}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userError\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","import { Todo } from '../types/todo';\n\nexport const getNextTodoId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}